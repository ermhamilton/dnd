# Scaffolding generated by Casein v5.1.1.5

module Casein
  class BackgroundsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Backgrounds'
  		@backgrounds = Background.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View background'
      @background = Background.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new background'
    	@background = Background.new
    end

    def create
      @background = Background.new background_params
    
      if @background.save
        flash[:notice] = 'Background created'
        redirect_to casein_backgrounds_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new background'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update background'
      
      @background = Background.find params[:id]
    
      if @background.update_attributes background_params
        flash[:notice] = 'Background has been updated'
        redirect_to casein_backgrounds_path
      else
        flash.now[:warning] = 'There were problems when trying to update this background'
        render :action => :show
      end
    end
 
    def destroy
      @background = Background.find params[:id]

      @background.destroy
      flash[:notice] = 'Background has been deleted'
      redirect_to casein_backgrounds_path
    end
  
    private
      
      def background_params
        params.require(:background).permit(:name, :description, :skill_proficiencies, :tool_proficiencies, :languages, :equipment, :feature, skill_ids:[])
      end

  end
end